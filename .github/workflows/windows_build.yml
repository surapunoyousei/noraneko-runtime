# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

# ¬© 2023 Floorp Projects & Contributors

on:
  workflow_call:
    inputs:
      release:
        type: boolean
        default: false
      debug:
        type: boolean
        default: true
      package-moz-artifact:
        type: boolean
        default: false
      code-coverage:
        type: boolean
        default: false
      profile-generate-mode:
        type: boolean
        default: false
      pgo_artifact_name:
        type: string
        required: false

jobs:
  win-build:
    runs-on: ubuntu-latest
    steps:
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: "latest"
    - uses: actions/checkout@v4
      name: Clone üß¨
      with:
        submodules: "recursive"

    - name: Configure sccache
      uses: actions/github-script@v7
      with:
        script: |
          core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
          core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');

    - name: setup Rust ü¶Ä
      run: |
        rustup default 1.82.0
        rustup target add x86_64-pc-windows-msvc

        #? https://github.com/mozilla/sccache#known-caveats
        export CARGO_INCREMENTAL=0

    - name: Allocate swap
      run: |
        echo Before:
        free -h
        df -h

        echo
        echo

        sudo swapoff /mnt/swapfile
        sudo rm /mnt/swapfile
        sudo fallocate -l 30G /mnt/swapfile
        sudo chmod 600 /mnt/swapfile
        sudo mkswap /mnt/swapfile
        sudo swapon /mnt/swapfile

        sudo apt autoremove -y
        sudo apt clean
        sudo rm -rf  ./git
        sudo rm -rf /home/linuxbrew
        sudo rm -rf /usr/share/dotnet
        sudo rm -rf /usr/local/lib/android
        sudo rm -rf /usr/local/graalvm
        sudo rm -rf /usr/local/share/powershell
        sudo rm -rf /usr/local/share/chromium
        sudo rm -rf /opt/ghc
        sudo rm -rf /usr/local/share/boost
        sudo rm -rf /etc/apache2
        sudo rm -rf /etc/nginx
        sudo rm -rf /usr/local/share/chrome_driver
        sudo rm -rf /usr/local/share/edge_driver
        sudo rm -rf /usr/local/share/gecko_driver
        sudo rm -rf /usr/share/java
        sudo rm -rf /usr/share/miniconda
        sudo rm -rf /usr/local/share/vcpkg


        echo
        echo

        echo After:
        free -h
        df -h

    - name: Download PGO Artifact if exists
      if: inputs.pgo_artifact_name
      uses: actions/download-artifact@v4
      with:
        name: ${{inputs.pgo_artifact_name}}
        path: ~/artifacts

    - name: Setup ü™õ
      run: |
        cd $GITHUB_WORKSPACE

        # update noraneko to latest
        git submodule update --remote

        cp ./.github/workflows/mozconfigs/win64.mozconfig mozconfig

        # Copy Noraneko Branding
        cp -r ./noraneko/gecko/branding/* ./browser/branding/

        sudo apt install msitools -y

        # SCCACHE START
        echo "mk_add_options 'export RUSTC_WRAPPER=/home/runner/.mozbuild/sccache/sccache'" >> mozconfig
        echo "mk_add_options 'export CCACHE_CPP2=yes'" >> mozconfig
        echo "ac_add_options --with-ccache=/home/runner/.mozbuild/sccache/sccache" >> mozconfig
        echo "mk_add_options 'export SCCACHE_GHA_ENABLED=on'" >> mozconfig
        # SCCACHE END


        if [[ $GHA_debug == 'true' ]]; then
          echo "ac_add_options --enable-debug" >> mozconfig
          echo "ac_add_options RUSTC_OPT_LEVEL=3" >> mozconfig
          git apply --ignore-space-change  --reject --ignore-whitespace .github/patches/dev/*.patch
        fi
        if [[ $GHA_release == 'true' ]]; then
          echo "ac_add_options --enable-release" >> mozconfig
          # https://searchfox.org/mozilla-central/rev/c169f7d0287c1a6a5dd7469864135e605eed765f/docs/setup/configuring_build_options.rst#259
        fi
        if [[ $GHA_codecov == 'true' ]]; then
          echo "ac_add_options --enable-coverage" >> mozconfig
          #https://searchfox.org/mozilla-central/rev/abeb2aa5df6f02de3c12c54ff7b0865c34c3fde9/browser/config/mozconfigs/win64/code-coverage#10
          echo "export LIB=\"$(cd ~/.mozbuild/clang/lib/clang/* && cd lib/windows && pwd)\"" >> mozconfig
          echo 'export LDFLAGS="clang_rt.profile-x86_64.lib"' >> mozconfig

          echo 'export RUSTFLAGS="-Ccodegen-units=1 -Zprofile -Cpanic=abort -Zpanic_abort_tests -Coverflow-checks=off"' >> mozconfig
          echo 'export RUSTDOCFLAGS="-Cpanic=abort"' >> mozconfig
        fi

        # PGO START
        if [[ $GHA_profgen == 'true' ]]; then
          echo 'ac_add_options --enable-profile-generate=cross' >> mozconfig
        elif [[ -n $GHA_pgo_artifact_name ]]; then
          echo 'ac_add_options --enable-profile-use=cross' >> mozconfig
          echo 'ac_add_options --with-pgo-profile-path=$(echo ~)/artifacts/merged.profdata' >> mozconfig
          echo 'ac_add_options --with-pgo-jarlog=$(echo ~)/artifacts/en-US.log' >> mozconfig
          echo 'export MOZ_LTO=cross' >> mozconfig
        fi
        # PGO END

        echo "ac_add_options --enable-update-channel=alpha" >> mozconfig
        # echo "ac_add_options --with-version-file-path=noraneko/gecko/config" >> mozconfig
        sed -i 's|https://@MOZ_APPUPDATE_HOST@/update/6/%PRODUCT%/%VERSION%/%BUILD_ID%/%BUILD_TARGET%/%LOCALE%/%CHANNEL%/%OS_VERSION%/%SYSTEM_CAPABILITIES%/%DISTRIBUTION%/%DISTRIBUTION_VERSION%/update.xml|https://github.com/nyanrus/noraneko/releases/download/%CHANNEL%/%BUILD_TARGET%.update.xml|g' ./build/application.ini.in

        ./mach --no-interactive bootstrap --application-choice browser
      env:
        GHA_debug: ${{inputs.debug}}
        GHA_release: ${{inputs.release}}
        GHA_codecov: ${{inputs.code-coverage}}
        GHA_profgen: ${{inputs.profile-generate-mode}}
        GHA_pgo_artifact_name: ${{inputs.pgo_artifact_name}}

    - name: Mach Configure
      run: |
        ./mach configure

    - name: Build üî®
      run: |

        ./mach build

        ./mach package
        rm -rf ~/.cargo

    # Publish START
    - name: Publish PackageüéÅ
      if: inputs.profile-generate-mode == 'false'
      uses: actions/upload-artifact@v4
      with:
        name: noraneko-win-amd64-dev
        path: obj-x86_64-pc-windows-msvc/dist/noraneko-*.zip

    - name: Publish Package Mozilla ArtifactüéÅ
      if: inputs.package-moz-artifact && inputs.profile-generate-mode == 'false'
      uses: actions/upload-artifact@v4
      with:
        name: noraneko-win-amd64-moz-artifact
        path: obj-x86_64-pc-windows-msvc/dist/noraneko-*.zip

    - name: Publish dist/* for generate profile
      if: inputs.profile-generate-mode
      uses: actions/upload-artifact@v4
      with:
        name: noraneko-win-amd64-profile-generate-mode
        path: obj-x86_64-pc-windows-msvc/dist/

    - name: Publish dist/host for MAR
      if: inputs.profile-generate-mode == 'false'
      uses: actions/upload-artifact@v4
      with:
        name: noraneko-dist-host
        path: obj-x86_64-pc-windows-msvc/dist/host/
    # Publish END
